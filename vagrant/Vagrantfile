# Copyright (c) 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#!/usr/bin/env bash
# q -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|

  aws_data_file = "#{ENV['HOME']}/.vagrant/aws-creds"
  vagrant_user = ENV['VAGRANT_USER'] || 'vagrant'
  build_cached_image = ENV["BUILD_CACHED_IMAGE"] == 'true' ? true : false
  provision_development_environment = ENV["SWAN_DEVELOPMENT_ENVIRONMENT"] == 'true' ? true : false

  # SSH agent forwarding (for host private keys)
  config.ssh.forward_agent = true
  config.ssh.keys_only = false
  config.ssh.insert_key = false
  config.ssh.forward_x11 = true
  config.vm.box = "centos/7"
  config.vm.box_check_update = false

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "10.141.141.10"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  home_dir = vagrant_user == 'root' ? '/root/' : "/home/#{vagrant_user}"
  config.vm.synced_folder "..", "#{home_dir}/go/src/github.com/intelsdi-x/swan", :mount_options => ["umask=0022,dmask=0022,fmask=0022"]
  if File.directory?(File.expand_path("#{ENV['HOME']}/swan_s3_creds"))
       config.vm.synced_folder "#{ENV['HOME']}/swan_s3_creds", "#{home_dir}/swan_s3_creds", :mount_options => ["umask=0022,dmask=0022,fmask=0022"]
  end

  config.vm.provider "virtualbox" do |vb, override|
    vb.gui = false
    vb.name = "swan"

    vb.cpus = (ENV['VBOX_CPUS'] != '' && ENV['VBOX_CPUS'] || 2)       # NOTE: integration tests fail with less than 2
    vb.memory = (ENV['VBOX_MEM'] != '' && ENV['VBOX_MEM'] || 4096)    # NOTE: integration tests tend to crash with less (gcc)

    override.ssh.insert_key = true
    override.ssh.keys_only = true
    override.vm.provision "shell", path: "provision.sh", env: {
        'VAGRANT_USER' => vagrant_user,
        'HOME_DIR' => home_dir,
        'SWAN_DEVELOPMENT_ENVIRONMENT' => provision_development_environment}
    override.vm.synced_folder "#{ENV['HOME']}/.glide", "#{home_dir}/.glide", :mount_options => ["umask=0022,dmask=0022,fmask=0022"]
  end

  config.vm.provider :aws do |aws, override|
    require 'yaml'
    # load a file at this location that can be used to set aws specific
    # information. This allows you to set your own credentials, but also
    # custom what ami the job runs on.
    if File.exists?(aws_data_file)
      data = YAML.load_file(aws_data_file)
    else
      data = {}
    end
    override.nfs.functional = false
    aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
    aws.secret_access_key = ENV['AWS_SECRET_ACCESS_KEY']
    aws.region = ENV['AWS_DEFAULT_REGION']
    aws.block_device_mapping = [{'DeviceName' => '/dev/sda1',
                                 'Ebs.Iops' => 1000,
                                 'Ebs.VolumeSize' => 40,
                                 'Ebs.VolumeType' => 'io1',
                                 'Ebs.DeleteOnTermination' => true }]

    override.vm.box = "aws"
    # requiretty cannot be set in sudoers for vagrant to work
    aws.user_data = "#!/bin/bash\nsed -i 's/Defaults    requiretty/#Defaults    requiretty/' /etc/sudoers"

    aws.instance_package_timeout = 60000
    aws.instance_type = "m4.large"
    aws.keypair_name = "snapbot-private"
    override.ssh.username = data['ssh_username'] || "centos"

    # centos7 for us-east
    # COPY AMI ID HERE
    # non-cached ami: ami-6d1c2007
    ### USE BASE/CACHED IMAGE
    #aws.ami = "ami-6d1c2007" # base image
    aws.ami = (ENV['SWAN_AMI'] != '' && ENV['SWAN_AMI'] || "ami-b284fba4") # Thu Apr  6 16:45:16 UTC 2017
    if build_cached_image
      override.vm.provision "shell", path: "provision.sh", env: {
        'VAGRANT_USER' => vagrant_user,
        'HOME_DIR' => home_dir,
        'SWAN_DEVELOPMENT_ENVIRONMENT' => provision_development_environment}
    end

  end
  
end
